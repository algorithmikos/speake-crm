import {
  Button,
  Card,
  CardHeader,
  CardContent,
  CardActions,
  Divider,
  Grid,
  IconButton,
  Paper,
  Typography,
  ButtonGroup,
} from "@mui/material";
import React, { useEffect, useState } from "react";
import ContentCopyIcon from "@mui/icons-material/ContentCopy";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";

import "./TemplateReplies.css";

import { doc, onSnapshot } from "firebase/firestore";
import { db } from "../../firebase.config";
import { copyToClipboard, useMediaQueries } from "../../utils/functions";
import { Delete, EditNote } from "@mui/icons-material";
import NewReplyDialog from "./dialogs/NewReplyDialog";
import EditReplyDialog from "./dialogs/EditReplyDialog";
import DeleteReplyDialog from "./dialogs/DeleteReplyDialog";
import { useDispatch, useSelector } from "react-redux";
import { setEditReply, setReplies } from "../../rtk/slices/utils-slice";
import TelegramIcon from "../../components/Icons/TelegramIcon";

const TemplateReplies = () => {
  const dispatch = useDispatch();
  const utilsStore = useSelector((state) => state.utils);
  const { replies } = utilsStore;

  const content = [
    {
      title: "ูู ุงูุชูุงุตูู",
      text: "ุฃููุง ุจุญุถุฑุชู ูู ุฅูุฌููุฒู ุจุงููุนููุฉ ูุน ูุณุชุฑ ุนูุฑ ุญูุฏู ๐๐ปโโ๏ธ๐ฅณ\n\nููุฑุณ ุงูุชุฃุณูุณ ููุจุฏุฃ ุฃูู 6 ุฅู ุดุงุก ุงููู โ๏ธ ููู ุนุจุงุฑุฉ ุนู ููุฑุณ ุฃุณุงุณูุงุช ูุณุชุฑ ุนูุฑ ุจูุจุฏุฃ ููู ูุน ุงูุทูุงุจ ูู ุงูุตูุฑ ุทูุจุฉ ุทูุจุฉ ๐งฑ ๐ ูุชุงุญ ุงูููุงูู ููู ุงูููุงู ุญุณุจ ุงูููุงุณุจ ูุญุถุฑุชู ๐บ ๐\n\nูุฏุฉ ุงูููุฑุณ ุดูุฑุ ุซูุงููุฉ ูุญุงุถุฑุงุชุ ุจูุงูุน ูุญุงุถุฑุชูู ูู ุงูุฃุณุจูุนุ ููุฏุฉ ุงููุญุงุถุฑุฉ ูู ุณุงุนุฉ ูุณุงุนุฉ ููุตู ุญุณุจ ุงุญุชูุงุฌ ุงููุงุฏุฉ ุงูุนูููุฉ ๐\n\nูุงูุญุฏ ุงูุฃูุตู ููุทูุงุจ ูู ุงููุฌููุนุฉ 10 ุทูุงุจ ๐ฅ๏ธ\n\nูููุงู ุงูููุฑุณ ๐\n- ูู ุงููุนุงุฏู: ุดุงุฑุน 151ุ ูุจูู 4 (ุนูุงุฑุฉ ุจูู ูุฑูุฏูู ุฃุฌุฑูููู)ุ ุงูุฏูุฑ ุงู11ุ ุจุฏุงุฎู ุดุฑูุฉ ุฅุจุฏุงุน ูุงุจูุชุงู. ููููู ุงููุตูู ููููุงู ูู ููุฏุงู ุงูุญุฑูุฉ ููุญุทุฉ ูุชุฑู ุงููุนุงุฏู.\n\n- ูู ุงูุฏูู: 20 ุดุงุฑุน ุงูุดุงุทูุฑู ูุชูุฑุน ูู ุดุงุฑุน ุงูุฏูู\n\n* ููุชุงุญ ุฃูููุงููุ ุจุทุฑููุชูุง ุงูุฎุงุตุฉ ูุงูุชู ุชููู ุจููุณ ููุงุกุฉ ูุชูุงุนู ุงููุฌู ููุฌู\n\nุณุนุฑ ุงูููุฑุณ ูููุฑุฏ ุงููุงุญุฏ 800ุฌ ุดุงูู ุงูููุงุฏ ุงูุนูููุฉ ๐\nููุชุงุญ ุฎุตู ุฎุงุต ุฌุฏูุง ูููุฌููุนุงุช ๐ฐ\n\n๐คฏ ุงูุฃูุงูู ูุญุฏูุฏุฉ ุฌุฏุง ๐คฏ ููู ุญุถุฑุงุชูู ุนุงูุฒูู ุชูุญููุง ุชุญุฌุฒูุง ูุจู ูุง ุงูุฃูุงูู ุชูุชูู ๐ ุฃู ุญุงุจูู ุชุนุฑููุง ูุนูููุงุช ุฃูุชุฑ ๐ค ููุฑุฌู ุชุฑู ุฑูู ุงููุงุชู ๐ ูุณูู ูููู ุฃุญุฏ ููุซูู ุฎุฏูุฉ ุงูุนููุงุก ุจุงูุชูุงุตู ูุนูู ููุฑุฏ ุนูู ูุงูุฉ ุงูุงุณุชูุณุงุฑุงุช โ๏ธ",
    },
    {
      title: "ููุงู ุงูููุฑุณ",
      text: "ููุงู ุงูููุฑุณ ๐\n\n- ูู ุงููุนุงุฏู: ุดุงุฑุน 151ุ ูุจูู 4 (ุนูุงุฑุฉ ุจูู ูุฑูุฏูู ุฃุฌุฑูููู)ุ ุงูุฏูุฑ ุงู11ุ ุจุฏุงุฎู ุดุฑูุฉ ุฅุจุฏุงุน ูุงุจูุชุงู. ููููู ุงููุตูู ููููุงู ูู ููุฏุงู ุงูุญุฑูุฉ ููุญุทุฉ ูุชุฑู ุงููุนุงุฏู.\n\n- ูู ุงูุฏูู: 20 ุดุงุฑุน ุงูุดุงุทูุฑู ูุชูุฑุน ูู ุดุงุฑุน ุงูุฏูู\n\n* ููุชุงุญ ุฃูููุงููุ ุจุทุฑููุชูุง ุงูุฎุงุตุฉ ูุงูุชู ุชููู ุจููุณ ููุงุกุฉ ูุชูุงุนู ุงููุฌู ููุฌู\n",
    },
    {
      title: "ุณุนุฑ ุงูููุฑุณ",
      text: "ุณุนุฑ ุงูููุฑุณ ูููุฑุฏ ุงููุงุญุฏ 800ุฌ ุดุงูู ุงูููุงุฏ ุงูุนูููุฉ ๐\nููุชุงุญ ุฎุตู ุฎุงุต ุฌุฏูุง ูููุฌููุนุงุช ๐ฐ",
    },
    {
      title: "ุงูุฏุฑูุณ ูุชุจุฏุฃ ุงูุชูุ",
      text: "ุฅู ุดุงุก ุงููู:\nููุฑุณ ุงูุชุฃุณูุณ ููุจุฏุฃ ุงูุดูุฑ ุงูุฌุงู (ููููู) ููุชุงุญ ุงูุญุฌุฒ ูุญุฏ 31 / 5\n\nุฃูุง ุฏุฑูุณ ุงูุซุงูููุฉ ุงูุนุงูุฉ (3 ุซุงููู) ููุชุจุฏุฃ ูู ุดูุฑ 8",
    },
    {
      title: "ูุฏุฉ ุงูููุฑุณ",
      text: "ูุฏุฉ ุงูููุฑุณ ุดูุฑุ ุซูุงููุฉ ูุญุงุถุฑุงุชุ ุจูุงูุน ูุญุงุถุฑุชูู ูู ุงูุฃุณุจูุนุ ููุฏุฉ ุงููุญุงุถุฑุฉ ูู ุณุงุนุฉ ูุณุงุนุฉ ููุตู ุญุณุจ ุงุญุชูุงุฌ ุงููุงุฏุฉ ุงูุนูููุฉ ๐",
    },
    {
      title: "ุฏุนูุฉ ููุญุฌุฒ ูุงูุญุตูู ุนูู ุฑูู",
      text: "๐คฏ ุงูุฃูุงูู ูุญุฏูุฏุฉ ุฌุฏุง ๐คฏ ููู ุญุถุฑุงุชูู ุนุงูุฒูู ุชูุญููุง ุชุญุฌุฒูุง ูุจู ูุง ุงูุฃูุงูู ุชูุชูู ๐ ุฃู ุญุงุจูู ุชุนุฑููุง ูุนูููุงุช ุฃูุชุฑ ๐ค ููุฑุฌู ุชุฑู ุฑูู ุงููุงุชู ๐ ูุฃ. ููุงุฑ ูุชุชูุงุตู ูุนูู ููุฑุฏ ุนูู ูุงูุฉ ุงูุงุณุชูุณุงุฑุงุช โ๏ธ\n\nููููู ุชุชูุงุตููุง ูุนุงูุง ุนูู ุงูุฑูู ุฏุง:\n01070284188",
    },
    {
      title: "ููู ุดูุงุฏุงุช ูุนุชูุฏุฉุ",
      text: "ูุง ูุง ููุฏูุ ูุฃู ุงูููุฑุณ ูุด ููุฑุณ ุฃููุชุณ ุฃู ุชูููุ ูุฅููุง ููุฑุณ ุชุฃุณูุณู ูู ุงููุบุฉ.\n\nุงูุดูุงุฏุงุช ุงููุนุชูุฏุฉ ุจุชููู ูููุฑุณุงุช ุงูุทูุงูุฉ ูู ุงููุบุฉ ูุงู ุจููุฏููุง ุจุดูู ุญุตุฑู ุงููุฌูุณ ุงูุซูุงูู ุงูุจุฑูุทุงูู ูุงูุฌุงูุนุฉ ุงูุฃูุฑูููุฉ ุจุงููุงูุฑุฉ.\n\nูุฃู ุฃูุงุฏูููุฉ ุจุชุฏุนู ุฅููุง ุจุชูุฏู ุงูุดูุงุฏุงุช ุฏู ูุฏุง ูุด ุจูููู ุตุญูุญ ูุง ููุฏู ูุจุชููู ุดูุงุฏุงุช ุชูุฏูุฑ ุฃู ุฅุซุจุงุช ูุญุถูุฑ ูุฅุชูุงู ุงูุฏูุฑุฉ ุงูุชุนููููุฉ ูุด ุฃูุชุฑ.\n\nูู ุงููุงูุน ุงูุดูุงุฏุงุช ุงูุตุงุฏุฑุฉ ุนู ุงููุฌูุณ ุงูุซูุงูู ุงูุจุฑูุทุงูู ุฃู ุงูุฌุงูุนุฉ ุงูุฃูุฑูููุฉ ุฃู ูููุงุฆูู ูู ููุงู ุดูุงุฏุงุช ูุคูุชุฉ ุจูููู ููุง ูุฏุฉ ุตูุงุญูุฉ ููุชูุฏูู ุจููุง ูู ุณูุงุฑุงุช ุงูุฏูู ุงูุฃุฌูุจูุฉ ูุงููุคุณุณุงุช ุงูุฌุงูุนูุฉุ ูุจุนุฏ ุงูุชูุงุก ูุฏุฉ ุตูุงุญูุฉ ุงูุดูุงุฏุฉ ุจูููู ุงูุทุงูุจ ูุญุชุงุฌ ูุนูุฏ ุงูุงูุชุญุงู ูุฑุฉ ุชุงููุฉ ูู ุญุจ ูุณุชุฎุฑุฌ ุงูุดูุงุฏุฉ ุฏู ูุงุณุชุฎุฏุงููุง ูู ุดูุก ุขุฎุฑ.",
    },
  ];

  const [dialogsState, setDialogsState] = useState({
    newReply: false,
    editReply: false,
    deleteReply: false,
  });

  const { xs, sm, md, lg, xl } = useMediaQueries();

  return (
    <Paper elevation={0} sx={{ mt: 10 }}>
      <Grid container gap={1} justifyContent="center" alignItems="flex-start">
        <ButtonGroup>
          <Button
            variant="contained"
            onClick={() =>
              setDialogsState((prev) => ({ ...prev, newReply: true }))
            }
            sx={{ mt: xs ? 0 : 2, mb: 2 }}
          >
            Add Reply
          </Button>
        </ButtonGroup>

        <Grid
          item
          container
          justifyContent="center"
          // alignItems="center"
          gap={1}
        >
          {replies?.map((piece, index) => (
            <Card key={index} elevation={7} sx={{ width: 290 }}>
              <CardHeader
                dir="rtl"
                className="reply-title"
                title={piece.title}
                action={
                  <ButtonGroup>
                    <IconButton
                      size="small"
                      onClick={() =>
                        copyToClipboard(
                          piece.text,
                          <img
                            src="https://i.imgur.com/1JbtYjr.gif"
                            height={150}
                            width={150}
                          />
                        )
                      }
                    >
                      <ContentCopyIcon />
                    </IconButton>
                  </ButtonGroup>
                }
              />

              <Divider />

              <CardContent>
                <Typography
                  className="reply-text app-font"
                  sx={{
                    whiteSpace: "pre-wrap",
                    textAlign: "right",
                    direction: "rtl",
                  }}
                >
                  {piece.text}
                </Typography>
              </CardContent>

              <Divider />

              <CardActions>
                <Grid container justifyContent="space-between">
                  <IconButton
                    size="small"
                    color="error"
                    onClick={() => {
                      dispatch(setEditReply({ ...piece, index: index }));
                      setDialogsState((prev) => ({
                        ...prev,
                        deleteReply: true,
                      }));
                    }}
                  >
                    <Delete />
                  </IconButton>

                  <IconButton
                    size="small"
                    color="primary"
                    onClick={() => {
                      dispatch(setEditReply({ ...piece, index: index }));
                      setDialogsState((prev) => ({ ...prev, editReply: true }));
                    }}
                  >
                    <EditNote />
                  </IconButton>
                </Grid>
              </CardActions>
            </Card>
          ))}
        </Grid>
      </Grid>

      <NewReplyDialog
        state={dialogsState.newReply}
        setState={(value) =>
          setDialogsState((prev) => {
            return { ...prev, newReply: value };
          })
        }
      />
      <EditReplyDialog
        state={dialogsState.editReply}
        setState={(value) =>
          setDialogsState((prev) => {
            return { ...prev, editReply: value };
          })
        }
      />
      <DeleteReplyDialog
        state={dialogsState.deleteReply}
        setState={(value) =>
          setDialogsState((prev) => {
            return { ...prev, deleteReply: value };
          })
        }
      />
    </Paper>
  );
};

export default TemplateReplies;
